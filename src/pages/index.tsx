import { type NextPage } from "next";
import Head from "next/head";
import type { ChangeEvent, FormEvent } from "react";
import { useState } from "react";
import { slugify } from "../utils/slugify";

import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const [name, setName] = useState("");
  const [price, setPrice] = useState("1");
  const [category, setCategory] = useState("");
  const [description, setDescription] = useState("");
  const [imgsSrc, setImgsSrc] = useState<string[]>([]);
  const [loading, setLoading] = useState(false);

  const utils = trpc.useContext();
  const productAsset = trpc.productAsset.getAll.useQuery();
  const create = trpc.productAsset.create.useMutation({
    onSettled() {
      utils.productAsset.getAll.invalidate();
      setLoading(false);
    },
  });

  function onChangeFile(e: ChangeEvent<HTMLInputElement>) {
    if (!e.target.files) return;
    for (const file of e?.target?.files) {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => {
        setImgsSrc((imgs) => [...imgs, reader.result as string]);
      };
      reader.onerror = () => {
        console.log(reader.error);
      };
    }
  }

  async function handleSubmit(e: FormEvent<HTMLFormElement>) {
    e.preventDefault();
    setLoading(true);
    const data = {
      name,
      price: Number(price),
      category,
      description,
      files: imgsSrc,
    };
    const res = create.mutate(data);
    console.log(res);
    reset();
  }

  function reset() {
    setName("");
    setCategory("");
    setPrice("");
    setDescription("");
    setImgsSrc([]);
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="max-w-screen-2xl">
        <form onSubmit={handleSubmit} className="flex flex-col gap-4">
          <input
            type="text"
            placeholder="Product Name"
            value={name}
            onChange={(e) => setName(e.target.value)}
          />
          <input
            type="number"
            placeholder="Price"
            value={price}
            onChange={(e) => setPrice(e.target.value)}
          />
          <input
            type="text"
            placeholder="Category"
            value={category}
            onChange={(e) => setCategory(e.target.value)}
          />
          <textarea
            cols={3}
            placeholder="description"
            value={description}
            onChange={(e) => setDescription(e.target.value)}
          />
          <input
            type="file"
            multiple
            placeholder="Image"
            onChange={onChangeFile}
          />
          <section className="flex flex-row justify-between">
            {imgsSrc &&
              imgsSrc.map((link) => (
                <picture key={link}>
                  <img
                    src={link}
                    alt="preview image"
                    className="h-[200px] w-[200px]"
                  />
                </picture>
              ))}
          </section>
          <button type="submit">{loading ? "Loading..." : "Submit"}</button>
        </form>
        <section>{JSON.stringify(productAsset.data)}</section>
      </main>
    </>
  );
};

export default Home;
